package ru.xtool.tests;// Generated by Selenium IDE
import com.codeborne.selenide.SelenideConfig;
import com.codeborne.selenide.SelenideDriver;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static com.codeborne.selenide.Selenide.sleep;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Order;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import ru.xtool.pages.*;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class AnalyzeTest {
  private static SelenideDriver driver = new SelenideDriver(new SelenideConfig().browser("chrome").browserSize("1280x1024").timeout(20000));
  private static AnalyzePage analyzePage;
  private static MainPage mainPage;
  private static AccountPage accountPage;
  static void openAnalyzePage() {
    analyzePage = new AnalyzePage(driver);
    driver.open(AnalyzePage.url);
  }
  static void login() {
    mainPage = new MainPage(driver);
    accountPage = new AccountPage(driver);
    driver.open(MainPage.url);
    mainPage.sendLoginData();
    sleep(1000);
  }
  @Test
  @Order(1)
  public void testAnalyzeCiteUnauthorized() {
    String url = "github.com";
    openAnalyzePage();
    analyzePage.analyzeCite(url);
    sleep(1000);
    assertEquals(analyzePage.getAnalyzedUrl(), url);
  }
  @Test
  @Order(1)
  public void testAnalyzeCiteAuthorized() {
    String url = "github.com";
    login();
    openAnalyzePage();
    analyzePage.analyzeCite(url);
    sleep(1000);
    assertEquals(analyzePage.getAnalyzedUrl(), url);
    driver.open(ChecksPage.url);
    assertEquals(accountPage.getCheckedUrl(), url);
  }


}
